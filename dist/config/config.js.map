{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nclass Ns1ConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.appModel.secureJsonData = {};\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {\n        gnetTokenSet: false,\n        ns1TokenSet: false\n      };\n    }\n    this.taskStatus = \"Task not found\";\n    this.task = {};\n    this.error = false;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n    var self = this;\n    if (this.appModel.enabled) {\n      this.getCustomerId().then((resp) => {\n        var taskName = self.taskName(resp.customerid);\n        self.getTask(taskName);\n      });\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.ns1_token) {\n      this.appModel.jsonData.ns1TokenSet =true;\n    }\n    if (this.appModel.secureJsonData.gnet_token) {\n      this.appModel.jsonData.gnetTokenSet =true;\n    }\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n  \tvar self = this;\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    // make sure our Api key works.\n    return this.getCustomerId()\n    .then((resp) => {\n      return self.ensureTask(resp.customerid).then(() => {\n        return this.appEditCtrl.importDashboards(); \n      });\n    }, () => {\n      console.log(\"failed to query NS1 API.\");\n    \tself.error = \"Unable to query NS1 API. please re-enter API Key\";\n    })\n  }\n\n  getCustomerId() {\n    return this.backendSrv.get(\"api/plugin-proxy/raintank-ns1-app/ns1/account/settings\");\n  }\n\n  taskName(customerid) {\n    return \"NS1-\" + customerid;\n  }\n\n  ensureTask(customerid) {\n    var self = this;\n    var taskName = this.taskName(customerid);\n    return this.getTask(taskName).then((exists) => {\n      if (exists) {\n        self.taskStatus = \"Task not created\";\n        return;\n      }\n      var task = {\n        \"name\": taskName,\n        \"metrics\": {\"/raintank/apps/ns1/*\":0},\n        \"config\": {\n          \"/raintank/apps/ns1\": {\n            \"ns1_key\": self.appModel.secureJsonData.ns1_token\n          }\n        },\n        \"interval\": 60,\n        \"route\": { \"type\": \"any\"},\n        \"enabled\": true\n      };\n\n      return self.backendSrv.post(\"/api/plugin-proxy/raintank-ns1-app/tasks\", task).then((resp) => {\n        this.task = resp.body;\n        self.taskStatus = \"Task running\";\n      });\n    });\n  }\n\n  getTask(taskName) {\n    var self = this;\n    return this.backendSrv.get(\"/api/plugin-proxy/raintank-ns1-app/tasks\", {metric: \"/raintank/apps/ns1/*\", name: taskName}).then((resp) => {\n      console.log(resp);\n      if (resp.body.length > 0 ){\n        self.task = resp.body[0];\n        self.taskStatus = \"Task running\";\n        return true;\n      }\n      return false;\n    });\n  }\n\n  stopTask() {\n    if (!this.task) {\n      console.log(\"unknown task name.\");\n      return;\n    }\n    return this.backendSrv.delete(\"/api/plugin-proxy/raintank-ns1-app/tasks/\"+this.task.id).then((resp) => {\n      console.log(resp);\n      this.task = {};\n      this.taskStatus = \"Task not found\";\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n      _.forEach(results, function(ds) {\n        if (foundGraphite && foundElastic) { return; }\n        if (ds.name === \"raintank\") {\n          foundGraphite = true;\n        }\n        if (ds.name === \"raintankEvents\") {\n          foundElastic = true;\n        }\n      });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/raintank-ns1-app/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/raintank-ns1-app/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('/api/datasources', elastic));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nNs1ConfigCtrl.template = configTemplate;\n\nexport {\n  Ns1ConfigCtrl as ConfigCtrl\n};\n\n"]}
{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nclass Ns1ConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.appModel.secureJsonData = {};\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {\n        gnetTokenSet: false,\n        ns1Token: null,\n      };\n    }\n    this.error = false;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n    var self = this;\n    if (this.appModel.enabled) {\n      this.getCustomerId().then((resp) => {}, () => {\n        // if we cant get the customerId, then we need to re-enter the ns1Token.\n        self.appModel.jsonData.ns1Token = null;\n        self.error = \"invalid NS1 apiKey. Please update the key.\";\n      });\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.gnet_token) {\n      this.appModel.jsonData.gnetTokenSet = true;\n    }\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n  \tvar self = this;\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    // make sure our Api key works.\n    return this.getCustomerId()\n    .then((resp) => {\n      return this.appEditCtrl.importDashboards(); \n    }, () => {\n      console.log(\"failed to query NS1 API.\");\n    \tself.error = \"Unable to query NS1 API. please re-enter API Key\";\n      self.appModel.jsonData.ns1Token = null;\n    });\n  }\n\n  getCustomerId() {\n    return this.backendSrv.get(\"api/plugin-proxy/ns1-app/ns1/account/settings\");\n  }\n  \n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('api/datasources').then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n      _.forEach(results, function(ds) {\n        if (foundGraphite && foundElastic) { return; }\n        if (ds.name === \"raintank\") {\n          foundGraphite = true;\n        }\n        if (ds.name === \"raintankEvents\") {\n          foundElastic = true;\n        }\n      });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/ns1-app/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/ns1-app/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('api/datasources', elastic));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nNs1ConfigCtrl.template = configTemplate;\n\nexport {\n  Ns1ConfigCtrl as ConfigCtrl\n};\n\n"]}
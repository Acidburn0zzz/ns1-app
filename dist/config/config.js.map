{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nclass Ns1ConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.appModel.secureJsonData = {};\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {\n        gnetTokenSet: false,\n        ns1TokenSet: false\n      };\n    }\n    this.taskStatus = \"Task not found\";\n    this.task = {};\n    this.error = false;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n    var self = this;\n    if (this.appModel.enabled) {\n      this.getCustomerId().then((resp) => {\n        var taskName = self.taskName(resp.customerid);\n        self.getTask(taskName);\n      });\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.ns1_token) {\n      this.appModel.jsonData.ns1TokenSet =true;\n    }\n    if (this.appModel.secureJsonData.gnet_token) {\n      this.appModel.jsonData.gnetTokenSet =true;\n    }\n    return Promise.resolve();\n  }\n\n  postUpdate() {\n  \tvar self = this;\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    // make sure our Api key works.\n    return this.getCustomerId()\n    .then((resp) => {\n      return self.ensureTask(resp.customerid).then(() => {\n        return this.appEditCtrl.importDashboards(); \n      });\n    }, () => {\n      console.log(\"failed to query NS1 API.\");\n    \tself.error = \"Unable to query NS1 API. please re-enter API Key\";\n    })\n  }\n\n  getCustomerId() {\n    return this.backendSrv.get(\"api/plugin-proxy/raintank-ns1-app/ns1/account/settings\");\n  }\n\n  taskName(customerid) {\n    return \"NS1-\" + customerid;\n  }\n\n  ensureTask(customerid) {\n    var self = this;\n    var taskName = this.taskName(customerid);\n    return this.getTask(taskName).then((exists) => {\n      if (exists) {\n        self.taskStatus = \"Task not created\";\n        return;\n      }\n      var task = {\n        \"name\": taskName,\n        \"metrics\": {\"/raintank/apps/ns1/_all\":0},\n        \"config\": {\n          \"/raintank/apps/ns1\": {\n            \"ns1_key\": self.appModel.secureJsonData.ns1_token\n          }\n        },\n        \"interval\": 60,\n        \"route\": { \"type\": \"any\", \"config\": {id: 1}},\n        \"enabled\": true\n      };\n\n      return self.backendSrv.post(\"/api/plugin-proxy/raintank-ns1-app/tasks\", task).then((resp) => {\n        this.task = resp.body;\n        self.taskStatus = \"Task running\";\n      });\n    });\n  }\n\n  getTask(taskName) {\n    var self = this;\n    return this.backendSrv.get(\"/api/plugin-proxy/raintank-ns1-app/tasks\", {metric: \"/raintank/apps/ns1/_all\", name: taskName}).then((resp) => {\n      console.log(resp);\n      if (resp.body.length > 0 ){\n        self.task = resp.body;\n        self.taskStatus = \"Task running\";\n        return true;\n      }\n      return false;\n    });\n  }\n\n  stopTask() {\n    if (!this.task) {\n      console.log(\"unknown task name.\");\n      return;\n    }\n    return this.backendSrv.get(\"/api/plugin-proxy/raintank-ns1-app/tasks/\"+this.task.id).then((resp) => {\n      console.log(resp);\n      this.task = {};\n      this.taskStatus = \"Task not found\";\n    });\n  }\n}\n\nNs1ConfigCtrl.template = configTemplate;\n\nexport {\n  Ns1ConfigCtrl as ConfigCtrl\n};\n\n"]}
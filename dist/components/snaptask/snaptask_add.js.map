{"version":3,"sources":["../../../src/components/snaptask/snaptask_add.js"],"names":[],"mappings":"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","file":"snaptask_add.js","sourcesContent":["import _ from 'lodash';\n\nclass SnapTaskAddCtrl {\n  constructor($scope, $injector, $q, $location, backendSrv, alertSrv) {\n    this.$q = $q;\n    this.$location = $location;\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$scope = $scope;\n    this.pageReady = true;\n    this.creatingTasks = false;\n    this.error = null;\n    this.zones = [];\n    this.monitoringJobs = [];\n    this.taskType = \"\";\n    this.newTask = {};\n    this.queuedTask = [];\n    this.ns1Token = null;\n    this.getConfig();\n    this.getZones();\n    this.getMonitoringJobs();\n  }\n\n  cancel() {\n    this.queuedTask = [];\n    this.newTak = {};\n    this.taskType = \"\";\n  }\n\n  getConfig() {\n    var self = this;\n    this.backendSrv.get(\"api/plugins/ns1-app/settings\").then((resp) => {\n      self.ns1Token = resp.jsonData.ns1Token;\n      if (self.ns1Token) {\n        self.pageReady = true;\n      } else {\n        self.error =\"NS1 Api Key not configured.\";\n      }\n    })\n  }\n\n  addTask() {\n    if (this.taskType == \"zone\") {\n      this.queuedTask.push({\n        type: \"zone\",\n        zone: this.newTask.zone\n      });\n    }\n    if (this.taskType == \"monitor\") {\n      this.queuedTask.push({\n        type: \"monitoring\",\n        jobId: this.newTask.job.id,\n        name: this.newTask.job.name,\n      });\n    }\n    this.newTask = {};\n  }\n\n  getZones() {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/ns1-app/ns1/zones').then((resp) =>{\n        self.zones = resp;\n    });\n  }\n  getMonitoringJobs() {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/ns1-app/ns1/monitoring/jobs').then((resp) =>{\n        self.monitoringJobs = resp;\n    });\n  }\n\n  create() {\n    var self = this;\n    this.creatingTasks = true;\n    var promises = [];\n    _.forEach(this.queuedTask, function(task) {\n      if (task.type === \"zone\") {\n        promises.push(self.addZoneTask(task.zone));\n      }\n      if (task.type === \"monitoring\") {\n        promises.push(self.addMonitorTask(task.jobId, task.name));\n      }\n    });\n\n    this.$q.all(promises).then(()=>{\n      console.log(\"finished creating tasks.\");\n      self.queuedTask = [];\n      self.creatingTasks = false;\n      self.$location.path(\"plugins/ns1-app/page/list-tasks\");\n    }, (resp)=>{\n      console.log(\"failed to add all tasks.\", resp);\n      self.creatingTasks = false;\n      self.alertSrv.set(\"failed to create task\", resp, 'error', 10000);\n    });\n  }\n\n  addZoneTask(zone) {\n\n    var task = {\n      \"name\": \"ns1-zone-\"+zone,\n      \"metrics\": {\"/raintank/apps/ns1/zones/*\":0},\n      \"config\": {\n        \"/raintank/apps/ns1\": {\n          \"ns1_key\": this.ns1Token,\n          \"zone\": zone\n        }\n      },\n      \"interval\": 300,\n      \"route\": { \"type\": \"any\"},\n      \"enabled\": true\n    };\n\n    return this.backendSrv.post(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        console.log(\"request failed.\", resp.meta.message);\n        return this.$q.reject(resp.meta.message);\n      }\n    });\n  }\n  addMonitorTask(jobId, jobName) {\n    var taskName = \"ns1-monitoring-\"+jobId;\n    var task = {\n      \"name\": \"ns1-monitoring-\"+jobId,\n      \"metrics\": {\"/raintank/apps/ns1/monitoring/*\":0},\n      \"config\": {\n        \"/raintank/apps/ns1\": {\n          \"ns1_key\": this.ns1Token,\n          \"jobId\": jobId,\n          \"jobName\": jobName,\n        }\n      },\n      \"interval\": 300,\n      \"route\": { \"type\": \"any\"},\n      \"enabled\": true\n    };\n\n    return this.backendSrv.post(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        console.log(\"request failed.\", resp.meta.message);\n        return this.$q.reject(resp.meta.message);\n      }\n    });\n  }\n}\n\nSnapTaskAddCtrl.templateUrl = 'public/plugins/ns1-app/components/snaptask/partials/snaptask_add.html';\nexport {SnapTaskAddCtrl};\n"]}